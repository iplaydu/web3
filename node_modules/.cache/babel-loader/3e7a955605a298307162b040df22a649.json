{"ast":null,"code":"var _jsxFileName = \"/Users/joshua/Development/web3/src/Demo.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport Backdrop from '@mui/material/Backdrop';\nimport { BigNumber, ethers } from \"ethers\";\nimport { NFTCollectible__factory } from './typechain-types/factories/contracts/NFTCollectible__factory';\nimport logo from './metamask.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalStyle = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 600,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4\n};\nconst contractAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\";\n\nfunction Demo() {\n  _s();\n\n  const [state, setState] = React.useState({\n    iconColor: \"disabled\",\n    connectedWallet: \"\",\n    contractSymbol: \"\",\n    contractAddress: \"\",\n    contractBaseTokenURI: \"\",\n    contractOwnerAddress: \"\",\n    contractPrice: \"\",\n    isOwner: false\n  });\n  const [nftCollection, setNFTCollection] = React.useState([]);\n  const [service, setService] = React.useState({\n    account: \"\",\n    currentBalance: 0,\n    ethBalance: \"\",\n    mintAmount: 0\n  });\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n    setService({ ...service,\n      mintAmount: 0\n    });\n  };\n\n  const handleClose = () => setOpen(false);\n\n  const [openWithdrawal, setOpenWithdrawal] = React.useState(false);\n\n  const handleOpenWithdrawal = () => setOpenWithdrawal(true);\n\n  const handleCloseWithdrawal = () => setOpenWithdrawal(false);\n\n  const connectWallet = async () => {\n    try {\n      console.log(\"connect wallet\");\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        alert(\"Please install MetaMask!\");\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Connected\", accounts[0]);\n      const provider = new ethers.providers.Web3Provider(ethereum); //const contract = NFTCollectible__factory.connect(contractAddress, provider.getSigner());\n\n      const contract = new ethers.Contract(contractAddress, NFTCollectible__factory.abi, signer);\n      const ownerAddress = await contract.owner();\n      const symbol = await contract.symbol();\n      const baseTokenURI = await contract.baseTokenURI();\n      const balance = await (await contract.balanceOf(accounts[0])).toNumber();\n      const ethBalance = ethers.utils.formatEther(await provider.getBalance(accounts[0]));\n      const isOwner = ownerAddress.toLowerCase() === accounts[0].toLowerCase();\n      const price = ethers.utils.formatEther(await contract.PRICE());\n      setState({\n        iconColor: \"success\",\n        connectedWallet: accounts[0],\n        contractSymbol: symbol,\n        contractAddress: contract.address,\n        contractBaseTokenURI: baseTokenURI,\n        contractOwnerAddress: ownerAddress,\n        contractPrice: `${price} ETH`,\n        isOwner: isOwner\n      });\n      setService({\n        account: accounts[0],\n        contract: contract,\n        currentBalance: balance,\n        ethBalance: `${ethBalance} ETH`,\n        mintAmount: 0,\n        ethProvider: provider\n      });\n      console.log(\"Connected\", accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const loadNFTCollection = async () => {\n    try {\n      console.log(\"load NFT collection\");\n      let baseURI = state.contractBaseTokenURI;\n      baseURI = baseURI.replace(\"ipfs://\", \"https://gateway.pinata.cloud/ipfs/\");\n      setNFTCollection([`${baseURI}Choppers%20NFT%201.png`, `${baseURI}Choppers%20NFT%202.png`]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const mintNFTs = async () => {\n    try {\n      console.log(\"mint NFTs\");\n      const address = service.account;\n      const amount = service.mintAmount;\n      const contract = service.contract;\n      const price = await contract.PRICE();\n      const ethValue = price.mul(BigNumber.from(amount));\n      const signer = service.ethProvider.getSigner();\n      let txn = await contract.connect(signer).mintNFTs(amount, {\n        value: ethValue\n      });\n      await txn.wait();\n      const balance = await contract.balanceOf(address);\n      setService({ ...service,\n        currentBalance: balance.toNumber(),\n        mintAmount: 0\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const withdraw = async () => {\n    try {\n      console.log(\"owner withdraw\");\n      const contract = service.contract;\n      const provider = service.ethProvider;\n      let txn = await contract.withdraw();\n      await txn.wait();\n      const ethBalance = ethers.utils.formatEther(await provider.getBalance(service.account));\n      setService({ ...service,\n        ethBalance: `${ethBalance} ETH`\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            component: \"div\",\n            children: \"Choppers NFT Collection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: \"logo\",\n            src: logo,\n            sx: {\n              width: 64,\n              height: 64\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 2,\n          sx: {\n            margin: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: connectWallet,\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            disabled: !state.contractBaseTokenURI,\n            onClick: loadNFTCollection,\n            children: \"Load NFT Collection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            disabled: !state.contractBaseTokenURI,\n            onClick: handleOpen,\n            children: \"Mint NFT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            disabled: !state.isOwner,\n            onClick: handleOpenWithdrawal,\n            children: \"Withdraw\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"column\",\n          spacing: 10,\n          sx: {\n            margin: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            spacing: 2,\n            sx: {\n              margin: 5\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'flex-end'\n              },\n              children: [/*#__PURE__*/_jsxDEV(AccountCircle, {\n                color: state.iconColor,\n                sx: {\n                  mr: 1,\n                  my: 0.5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"wallet_address\",\n                label: \"Connected Account\",\n                sx: {\n                  width: 300\n                },\n                variant: \"standard\",\n                value: state.connectedWallet,\n                inputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"contract_symbol\",\n              label: \"Contract Symbol\",\n              variant: \"standard\",\n              value: state.contractSymbol,\n              inputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'flex-end'\n              },\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"contract_address\",\n                label: \"Contract Address\",\n                sx: {\n                  width: 400\n                },\n                variant: \"standard\",\n                value: state.contractAddress,\n                inputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'flex-end'\n              },\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"contract_baseURI\",\n                label: \"Contract Base Token URI\",\n                sx: {\n                  width: 500\n                },\n                variant: \"standard\",\n                value: state.contractBaseTokenURI,\n                inputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImageList, {\n            sx: {\n              width: 500,\n              height: 450\n            },\n            cols: 3,\n            rowHeight: 164,\n            children: nftCollection.map(item => /*#__PURE__*/_jsxDEV(ImageListItem, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `${item}?w=164&h=164&fit=crop&auto=format`,\n                srcSet: `${item}?w=164&h=164&fit=crop&auto=format&dpr=2 2x`,\n                loading: \"lazy\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this)\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          \"aria-labelledby\": \"transition-modal-title\",\n          \"aria-describedby\": \"transition-modal-description\",\n          open: open,\n          onClose: handleClose,\n          closeAfterTransition: true,\n          BackdropComponent: Backdrop,\n          BackdropProps: {\n            timeout: 500\n          },\n          children: /*#__PURE__*/_jsxDEV(Fade, {\n            in: open,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: modalStyle,\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                spacing: 1,\n                sx: {\n                  width: 500\n                },\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'flex-end'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"mint_account\",\n                    label: \"Account\",\n                    sx: {\n                      width: 500\n                    },\n                    variant: \"standard\",\n                    value: service.account,\n                    inputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'flex-end'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"price\",\n                    label: \"NFT Price\",\n                    sx: {\n                      width: 500\n                    },\n                    variant: \"standard\",\n                    value: state.contractPrice,\n                    inputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'flex-end'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"balance\",\n                    label: \"Balance\",\n                    sx: {\n                      width: 500\n                    },\n                    variant: \"standard\",\n                    value: service.currentBalance,\n                    type: \"number\",\n                    inputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'flex-end'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"mint_amount\",\n                    type: \"number\",\n                    label: \"Mint Amount\",\n                    sx: {\n                      width: 500\n                    },\n                    variant: \"standard\",\n                    value: service.mintAmount,\n                    onChange: event => {\n                      const {\n                        value\n                      } = event.target;\n                      const amount = parseInt(value);\n                      setService({ ...service,\n                        mintAmount: amount\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"row\",\n                  spacing: 2,\n                  sx: {\n                    margin: 5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    onClick: mintNFTs,\n                    children: \"Mint\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    onClick: handleClose,\n                    children: \"close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          id: \"withdrawal_modal\",\n          \"aria-labelledby\": \"transition-modal-title\",\n          \"aria-describedby\": \"transition-modal-description\",\n          open: openWithdrawal,\n          onClose: handleCloseWithdrawal,\n          closeAfterTransition: true,\n          BackdropComponent: Backdrop,\n          BackdropProps: {\n            timeout: 500\n          },\n          children: /*#__PURE__*/_jsxDEV(Fade, {\n            in: openWithdrawal,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: modalStyle,\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                spacing: 1,\n                sx: {\n                  width: 500\n                },\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'flex-end'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"owner_account\",\n                    label: \"Owner Account\",\n                    sx: {\n                      width: 500\n                    },\n                    variant: \"standard\",\n                    value: service.account,\n                    inputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'flex-end'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"ethbalance\",\n                    label: \"ETH Balance\",\n                    sx: {\n                      width: 500\n                    },\n                    variant: \"standard\",\n                    value: service.ethBalance,\n                    inputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"row\",\n                  spacing: 2,\n                  sx: {\n                    margin: 5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    onClick: withdraw,\n                    children: \"Withdraw\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    onClick: handleCloseWithdrawal,\n                    children: \"close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Demo, \"R1QGp5dXEame4dNoN3poi6Gz0H4=\");\n\n_c = Demo;\nexport default Demo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["React","AppBar","Toolbar","Typography","CssBaseline","Container","Stack","Avatar","Box","Button","TextField","AccountCircle","ImageList","ImageListItem","Modal","Fade","Backdrop","BigNumber","ethers","NFTCollectible__factory","logo","modalStyle","position","top","left","transform","width","bgcolor","border","boxShadow","p","contractAddress","Demo","state","setState","useState","iconColor","connectedWallet","contractSymbol","contractBaseTokenURI","contractOwnerAddress","contractPrice","isOwner","nftCollection","setNFTCollection","service","setService","account","currentBalance","ethBalance","mintAmount","open","setOpen","handleOpen","handleClose","openWithdrawal","setOpenWithdrawal","handleOpenWithdrawal","handleCloseWithdrawal","connectWallet","console","log","ethereum","window","alert","accounts","request","method","provider","providers","Web3Provider","contract","Contract","abi","signer","ownerAddress","owner","symbol","baseTokenURI","balance","balanceOf","toNumber","utils","formatEther","getBalance","toLowerCase","price","PRICE","address","ethProvider","error","loadNFTCollection","baseURI","replace","mintNFTs","amount","ethValue","mul","from","getSigner","txn","connect","value","wait","withdraw","height","margin","display","alignItems","mr","my","readOnly","map","item","timeout","event","target","parseInt"],"sources":["/Users/joshua/Development/web3/src/Demo.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Container from '@mui/material/Container';\r\nimport Stack from '@mui/material/Stack';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport ImageList from '@mui/material/ImageList';\r\nimport ImageListItem from '@mui/material/ImageListItem';\r\nimport Modal from '@mui/material/Modal';\r\nimport Fade from '@mui/material/Fade';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport { BigNumber, ethers } from \"ethers\";\r\nimport { NFTCollectible__factory } from './typechain-types/factories/contracts/NFTCollectible__factory'\r\nimport type { NFTCollectible } from './typechain-types/contracts/NFTCollectible';\r\nimport logo from './metamask.svg';\r\n\r\nconst modalStyle = {\r\n  position: 'absolute' as 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 600,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst contractAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\";\r\n\r\ninterface IWallet {\r\n  iconColor: string;\r\n  connectedWallet: string;\r\n  contractAddress: string;\r\n  contractSymbol: string;\r\n  contractBaseTokenURI: string;\r\n  contractOwnerAddress: string;\r\n  contractPrice: string;\r\n  isOwner: boolean;\r\n}\r\n\r\ninterface IService {\r\n  account: string;\r\n  ethProvider?: ethers.providers.Web3Provider,\r\n  contract?: NFTCollectible;\r\n  currentBalance: number;\r\n  ethBalance: string;\r\n  mintAmount: number;\r\n}\r\n\r\nfunction Demo() {\r\n  const [state, setState] = React.useState<IWallet>({\r\n    iconColor: \"disabled\",\r\n    connectedWallet: \"\",\r\n    contractSymbol: \"\",\r\n    contractAddress: \"\",\r\n    contractBaseTokenURI: \"\",\r\n    contractOwnerAddress: \"\",\r\n    contractPrice: \"\",\r\n    isOwner: false\r\n  });\r\n\r\n  const [nftCollection, setNFTCollection] = React.useState<string[]>([]);\r\n\r\n  const [service, setService] = React.useState<IService>({\r\n    account: \"\",\r\n    currentBalance: 0,\r\n    ethBalance: \"\",\r\n    mintAmount: 0\r\n  });\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    setService({...service, mintAmount: 0});\r\n  }\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const [openWithdrawal, setOpenWithdrawal] = React.useState(false);\r\n  const handleOpenWithdrawal = () => setOpenWithdrawal(true);\r\n  const handleCloseWithdrawal = () => setOpenWithdrawal(false);\r\n\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      console.log(\"connect wallet\");\r\n      const { ethereum } = window;\r\n\r\n      if (!ethereum) {\r\n        alert(\"Please install MetaMask!\");\r\n        return;\r\n      }\r\n\r\n      const accounts = await ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      console.log(\"Connected\", accounts[0]);\r\n\r\n      const provider = new ethers.providers.Web3Provider(ethereum);\r\n      //const contract = NFTCollectible__factory.connect(contractAddress, provider.getSigner());\r\n      const contract = new ethers.Contract(contractAddress, NFTCollectible__factory.abi, signer) as NFTCollectible;\r\n      const ownerAddress = await contract.owner();\r\n      const symbol = await contract.symbol();\r\n      const baseTokenURI = await contract.baseTokenURI();\r\n      const balance = await (await contract.balanceOf(accounts[0])).toNumber();\r\n      const ethBalance = ethers.utils.formatEther(await provider.getBalance(accounts[0]));\r\n      const isOwner = (ownerAddress.toLowerCase() === accounts[0].toLowerCase());\r\n      const price = ethers.utils.formatEther(await contract.PRICE());\r\n      setState({\r\n        iconColor: \"success\",\r\n        connectedWallet: accounts[0],\r\n        contractSymbol: symbol,\r\n        contractAddress: contract.address,\r\n        contractBaseTokenURI: baseTokenURI,\r\n        contractOwnerAddress: ownerAddress,\r\n        contractPrice: `${price} ETH`,\r\n        isOwner: isOwner\r\n      });\r\n\r\n      setService({\r\n        account: accounts[0],\r\n        contract: contract,\r\n        currentBalance: balance,\r\n        ethBalance: `${ethBalance} ETH`,\r\n        mintAmount: 0,\r\n        ethProvider: provider\r\n      });\r\n\r\n\r\n      console.log(\"Connected\", accounts[0]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const loadNFTCollection = async () => {\r\n    try {\r\n      console.log(\"load NFT collection\");\r\n      let baseURI: string = state.contractBaseTokenURI;\r\n      baseURI = baseURI.replace(\"ipfs://\", \"https://gateway.pinata.cloud/ipfs/\");      \r\n\r\n      setNFTCollection(\r\n        [\r\n          `${baseURI}Choppers%20NFT%201.png`,\r\n          `${baseURI}Choppers%20NFT%202.png`,\r\n        ]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const mintNFTs = async () => {\r\n    try {\r\n      console.log(\"mint NFTs\");\r\n      const address = service.account;\r\n      const amount = service.mintAmount!;\r\n      const contract = service.contract!;\r\n      const price = await contract.PRICE();\r\n      const ethValue = price.mul(BigNumber.from(amount));\r\n      const signer = service.ethProvider!.getSigner();\r\n      let txn = await contract.connect(signer!).mintNFTs(amount, { value: ethValue });\r\n      await txn.wait();\r\n      const balance = await contract.balanceOf(address);\r\n      setService({...service, currentBalance: balance.toNumber(), mintAmount: 0});\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const withdraw = async () => {\r\n    try {\r\n      console.log(\"owner withdraw\");\r\n      const contract = service.contract!;\r\n      const provider = service.ethProvider!;\r\n      let txn = await contract.withdraw();\r\n      await txn.wait();\r\n      const ethBalance = ethers.utils.formatEther(await provider!.getBalance(service.account));\r\n      setService({...service, ethBalance: `${ethBalance} ETH`});\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar>\r\n        <Toolbar>\r\n          <Stack direction=\"row\" spacing={2}>\r\n            <Typography variant=\"h3\" component=\"div\">\r\n              Choppers NFT Collection\r\n            </Typography>\r\n            <Avatar alt=\"logo\" src={logo} sx={{ width: 64, height: 64 }} />\r\n          </Stack>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar />\r\n      <Container>\r\n        <Box>\r\n          <Stack direction=\"row\" spacing={2} sx={{ margin: 5 }}>\r\n            <Button variant=\"contained\" onClick={connectWallet}>Connect</Button>\r\n            <Button variant=\"contained\" disabled={!state.contractBaseTokenURI} onClick={loadNFTCollection}>Load NFT Collection</Button>\r\n            <Button variant=\"contained\" disabled={!state.contractBaseTokenURI} onClick={handleOpen}>Mint NFT</Button>\r\n            <Button variant=\"contained\" disabled={!state.isOwner} onClick={handleOpenWithdrawal}>Withdraw</Button>\r\n          </Stack>\r\n          <Stack direction=\"column\" spacing={10} sx={{ margin: 5 }}>\r\n            <Stack direction=\"row\" spacing={2} sx={{ margin: 5 }}>\r\n              <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\r\n                <AccountCircle color={state.iconColor} sx={{ mr: 1, my: 0.5 }} />\r\n                <TextField id=\"wallet_address\" label=\"Connected Account\" sx={{ width: 300 }} variant=\"standard\" value={state.connectedWallet}\r\n                  inputProps={{ readOnly: true, }}\r\n                />\r\n              </Box>\r\n              <TextField id=\"contract_symbol\" label=\"Contract Symbol\" variant=\"standard\" value={state.contractSymbol}\r\n                inputProps={{ readOnly: true, }}\r\n              />\r\n              <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\r\n                <TextField id=\"contract_address\" label=\"Contract Address\" sx={{ width: 400 }} variant=\"standard\" value={state.contractAddress}\r\n                  inputProps={{ readOnly: true, }}\r\n                />\r\n              </Box>\r\n              <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\r\n                <TextField id=\"contract_baseURI\" label=\"Contract Base Token URI\" sx={{ width: 500 }} variant=\"standard\" value={state.contractBaseTokenURI}\r\n                  inputProps={{ readOnly: true, }}\r\n                />\r\n              </Box>\r\n            </Stack>\r\n            <ImageList sx={{ width: 500, height: 450 }} cols={3} rowHeight={164}>\r\n              {nftCollection.map((item) => (\r\n                <ImageListItem key={item}>\r\n                  <img\r\n                    src={`${item}?w=164&h=164&fit=crop&auto=format`}\r\n                    srcSet={`${item}?w=164&h=164&fit=crop&auto=format&dpr=2 2x`}\r\n                    loading=\"lazy\"\r\n                    alt=\"\"\r\n                  />\r\n                </ImageListItem>\r\n              ))}\r\n            </ImageList>\r\n          </Stack>\r\n        </Box>\r\n        <div>\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            open={open}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <Fade in={open}>\r\n              <Box sx={modalStyle}>\r\n                <Stack spacing={1} sx={{ width: 500 }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\r\n                    <TextField id=\"mint_account\" label=\"Account\" sx={{ width: 500 }} variant=\"standard\" value={service.account}\r\n                      inputProps={{ readOnly: true }}\r\n                    />\r\n                  </Box>\r\n                  <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\r\n                    <TextField id=\"price\" label=\"NFT Price\" sx={{ width: 500 }} variant=\"standard\" value={state.contractPrice}\r\n                      inputProps={{ readOnly: true }}\r\n                    />\r\n                  </Box>\r\n                  <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\r\n                    <TextField id=\"balance\" label=\"Balance\" sx={{ width: 500 }} variant=\"standard\" value={service.currentBalance}\r\n                      type=\"number\" inputProps={{ readOnly: true }}\r\n                    />\r\n                  </Box>\r\n                  <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\r\n                    <TextField id=\"mint_amount\" type=\"number\" label=\"Mint Amount\" sx={{ width: 500 }} variant=\"standard\" value={service.mintAmount}\r\n                      onChange={event => {\r\n                        const { value } = event.target;\r\n                        const amount = parseInt(value);\r\n                        setService({ ...service, mintAmount: amount });\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                  <Stack direction=\"row\" spacing={2} sx={{ margin: 5 }}>\r\n                    <Button variant=\"outlined\" onClick={mintNFTs}>Mint</Button>\r\n                    <Button variant=\"outlined\" onClick={handleClose}>close</Button>\r\n                  </Stack>\r\n                </Stack>\r\n              </Box>\r\n            </Fade>\r\n          </Modal>\r\n        </div>\r\n        <div>\r\n          <Modal\r\n            id=\"withdrawal_modal\"\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            open={openWithdrawal}\r\n            onClose={handleCloseWithdrawal}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <Fade in={openWithdrawal}>\r\n              <Box sx={modalStyle}>\r\n                <Stack spacing={1} sx={{ width: 500 }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\r\n                    <TextField id=\"owner_account\" label=\"Owner Account\" sx={{ width: 500 }} variant=\"standard\" value={service.account}\r\n                      inputProps={{ readOnly: true }}\r\n                    />\r\n                  </Box>\r\n                  <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\r\n                    <TextField id=\"ethbalance\" label=\"ETH Balance\" sx={{ width: 500 }} variant=\"standard\" value={service.ethBalance}\r\n                      inputProps={{ readOnly: true }}\r\n                    />\r\n                  </Box>\r\n                  <Stack direction=\"row\" spacing={2} sx={{ margin: 5 }}>\r\n                    <Button variant=\"outlined\" onClick={withdraw}>Withdraw</Button>\r\n                    <Button variant=\"outlined\" onClick={handleCloseWithdrawal}>close</Button>\r\n                  </Stack>\r\n                </Stack>\r\n              </Box>\r\n            </Fade>\r\n          </Modal>\r\n        </div>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Demo;"],"mappings":"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"},"metadata":{},"sourceType":"module"}